version: '3'

services:

  redis:
    image: redis
    ports:
      - '6379:6379'
    healthcheck:
      test: redis-cli ping
      interval: 3s
      timeout: 3s
      retries: 10

  db:
    image: postgres
    env_file:
      - .env
    volumes:
      - ./pg_data:/var/lib/postgresql/data/pgdata
    ports:
      - '5432:5432'
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U ${POSTGRES_USER}' ]
      interval: 10s
      timeout: 5s
      retries: 3

  app:
    build: .
    tty: true
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    env_file:
      - .env
    ports:
      - '8000:8000'
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  celery:
    build: .
    environment:
      CELERY_BROKER_URL: $(CELERY_BROKER_URL)
      CELERY_RESULT_BACKEND: $(CELERY_RESULT_BACKEND)
    tty: true
    command: celery -A config worker -l INFO
    depends_on:
      - redis
      - app

  celery_beat:
    build: .
    tty: true
    command: celery -A config beat -l INFO -S django
    depends_on:
      - redis
      - app

volumes:
  pg_data:
